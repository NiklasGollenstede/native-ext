##
# AppVeyor build automation configuration for Windows and Linux
##

image: # build for windows and linux
  - Visual Studio 2015
  - Ubuntu

environment:
  nodejs_version: "8.3.0"
  matrix:
    - nodejs_arch: "x64"
    - nodejs_arch: "x86"

init: # run before 'git clone'
  - cmd: git config --global core.autocrlf true # use \r\n line endings on windows
clone_depth: 1 # git clone argument

install:
  #
  # read version from package.json
  - ps: $env:package_version = (Get-Content -Raw -Path package.json | ConvertFrom-Json).version
  - ps: Update-AppveyorBuild -Version "$env:package_version-$env:APPVEYOR_BUILD_NUMBER"
  #
  # install specified version of node.js
  # windows
  - ps: if ($isWindows) { Install-Product node $env:nodejs_version $env:nodejs_arch }
  # linux
  - sh: nvm install $nodejs_version # always x64
  - sh: | # install x86 libs and node.js
      if [ $nodejs_arch = 'x86' ]; then
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y libc6:i386 libncurses5:i386 libstdc++6:i386 libx32gcc-4.8-dev libc6-dev-i386 gcc-multilib g++-multilib
          wget -qO- https://nodejs.org/dist/v$nodejs_version/node-v$nodejs_version-linux-x86.tar.xz | \
          tar -Jx node-v$nodejs_version-linux-x86/bin/node
          mv node-v$nodejs_version-linux-x86/bin/node $(which node)
          node -e 'console.log("process.arch:", process.arch)'
      fi
  #
  # install modules, build ffi
  - npm install
  #
  # pack
  - npm run build
  - cmd: cd release && ren native-ext.exe native-ext-v%package_version%-win-%nodejs_arch%.exe
  - sh:  cd release && mv  native-ext     native-ext-v$package_version-linux-$nodejs_arch

build: off # already done in install step

# grab renamed file from release/
artifacts:
  - path: release/*

# build on tags only
skip_non_tags: true

deploy:
  provider: GitHub
  release: v$(appveyor_build_version) # rename manually to v$(package_version), which should be the name of the pushed tag
  description: build v$(appveyor_build_version) # edit manually
  auth_token: # created in GitHubs UI (public repo only), then encrypted in AppVoeyors UI
    secure: maxxggRkssdjgLe3OEQaVQXBOtFyHVit/AsK0gBqSn8Uwf2tg9w/dvAR5Ivyn27O
  artifact: /.*/
  draft: true # publish manually (or delete)
  prerelease: true
  force_update: false # name should be unique anyway
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: false       # if triggered manually on non-tag, still deploy
